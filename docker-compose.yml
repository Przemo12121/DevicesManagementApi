version: '3.3'

services:
    device_db:
        image: postgres:14-alpine
        restart: unless-stopped
        container_name: device_db
        hostname: device_db
        environment:
            POSTGRES_USER: ${DEVICES_POSTGRES_USER}
            POSTGRES_PASSWORD: ${DEVICES_POSTGRES_PASSWORD}
            POSTGRES_DB: ${DEVICES_POSTGRES_DB}
        volumes:
          - device_db:/var/lib/postgresql
        ports:
          - 127.0.0.1:${DEVICES_POSTGRES_PORT}:5432
        healthcheck:
            test: ["CMD-SHELL", "pg_isready", "-d", "${DEVICES_POSTGRES_USER}"]
            interval: 3s
            timeout: 3s
            retries: 3

    auth_db:
        image: postgres:14-alpine
        restart: unless-stopped
        hostname: auth_db
        container_name: auth_db
        environment:
            POSTGRES_USER: ${AUTH_POSTGRES_USER}
            POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
            POSTGRES_DB: ${AUTH_POSTGRES_DB}
        volumes:
          - auth_db:/var/lib/postgresql
        ports:
          - 127.0.0.1:${AUTH_POSTGRES_PORT}:5432
        healthcheck:
            test: ["CMD-SHELL", "pg_isready", "-d", "${AUTH_POSTGRES_DB}"]
            interval: 3s
            timeout: 3s
            retries: 3

    api:
        build: 
            context: .
            args: 
                DEVICES_DB_CONNECTION_STRING: Username=${DEVICES_POSTGRES_USER};Password=${DEVICES_POSTGRES_PASSWORD};Server=device_db;Database=${DEVICES_POSTGRES_DB}
                AUTH_DB_CONNECTION_STRING: Username=${AUTH_POSTGRES_USER};Password=${AUTH_POSTGRES_PASSWORD};Server=auth_db;Database=${AUTH_POSTGRES_DB}
                ADMIN_EMPLOYEE_ID: ${API_ADMIN_EMPLOYEE_ID}
                ADMIN_PASSWORD: ${API_ADMIN_PASSWORD}
        container_name: api
        restart: unless-stopped
        depends_on:
            device_db:
                condition: service_healthy
            auth_db:
                condition: service_healthy
        ports: 
            - "${API_PORT}:${API_PORT}"
        expose: 
            - ${API_PORT}

volumes:
    device_db:
    auth_db: