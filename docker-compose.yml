version: '3.3'

services:
    device_db:
        image: postgres:14-alpine
        restart: unless-stopped
        container_name: device_db
        hostname: device_db
        networks:
          - xyz
        environment:
            POSTGRES_USER: devices
            POSTGRES_PASSWORD: testpassword
            POSTGRES_DB: devices_menagement
        volumes:
          - device_db:/var/lib/postgresql
          #- ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
        ports:
          - 127.0.0.1:6000:5432
        healthcheck:
            test: ["CMD", "nc", "-z", "localhost:6000"]
            interval: 3s
            timeout: 1s
            retries: 3

    auth_db:
        image: postgres:14-alpine
        restart: unless-stopped
        hostname: auth_db
        container_name: auth_db
        networks:
          - xyz
        environment:
            POSTGRES_USER: devices_auth
            POSTGRES_PASSWORD: testpassword_auth
            POSTGRES_DB: devices_menagement_auth
        volumes:
          - auth_db:/var/lib/postgresql
          #- ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
        ports:
          - 127.0.0.1:6001:5432
        healthcheck:
            test: ["CMD", "nc", "-z", "localhost:6001"]
            interval: 3s
            timeout: 1s
            retries: 3

    api:
        build: .
        container_name: api
        restart: unless-stopped
        networks:
          - xyz
        # depends_on:
        #     device_db:
        #         condition: service_healthy
        #     auth_db:
        #         condition: service_healthy
        ports: 
            - "5000:5000"
        expose: 
            - 5000

networks:
  xyz:

volumes:
    device_db:
    auth_db: